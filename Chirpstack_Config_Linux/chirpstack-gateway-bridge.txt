 See https://www.chirpstack.io/gateway-bridge/install/config/ for a full
# configuration example and documentation.

[general]
log_level=4
log_to_syslog=false


# Gateway backend configuration.
[backend]
type="semtech_udp"

  # Semtech UDP packet-forwarder backend.
  [backend.semtech_udp]
  udp_bind = "0.0.0.0:1700"
  skip_crc_check=false
  fake_rx_time=false

  # ChirpStack Concentratord backend.
  [backend.concentratord]

  # Check for CRC OK.
  crc_check=true

  # Event API URL.
  event_url="ipc:///tmp/concentratord_event"

  # Command API URL.
  command_url="ipc:///tmp/concentratord_command"

  # Basic Station backend.
  [backend.basic_station]

  # ip:port to bind the Websocket listener to.
  bind=":3001"

  # Stats interval.
  stats_interval="30s"

  # Ping interval.
  ping_interval="1m0s"

  # Read timeout.
  read_timeout="1m5s"

  # Write timeout.
  write_timeout="1s"
  # Region.
  region="EU433"

  # Minimal frequency (Hz).
  frequency_min=433000000

  # Maximum frequency (Hz).
  frequency_max=434775000

  # Integration configuration.
  [integration]

  # Payload marshaler.
  marshaler="protobuf"

  # MQTT integration configuration.
  [integration.mqtt]
  # Integration configuration.
  [integration]

  # Payload marshaler.
  marshaler="protobuf"

  # MQTT integration configuration.
  [integration.mqtt]

  # Event topic template.
  event_topic_template="gateway/{{ .GatewayID }}/event/{{ .EventType }}"

  # State topic template.
  state_topic_template="gateway/{{ .GatewayID }}/state/{{ .StateType }}"

  # Command topic template.
  command_topic_template="gateway/{{ .GatewayID }}/command/#"

  # State retained.
  state_retained=true
  # Keep alive will set the amount of time (in seconds) that the client should
  # wait before sending a PING request to the broker. This will allow the client
  # to know that a connection has not been lost with the server.
  keep_alive="30s"

  # Maximum interval that will be waited between reconnection attempts when connection is lost.
  max_reconnect_interval="1m0s"

  # Terminate on connect error.
  terminate_on_connect_error=false


  # MQTT authentication.
  [integration.mqtt.auth]

  # Type defines the MQTT authentication type to use.
  type="generic"

    # Generic MQTT authentication.
    [integration.mqtt.auth.generic]

    # MQTT servers.
    servers= "tcp://127.0.0.1:1883"

    # Quality of service level
    qos=0

    # Clean session
    clean_session=true


